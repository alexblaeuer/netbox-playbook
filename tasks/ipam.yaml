---
- name: Ensure RIR's exist.
  netbox_rir:
    netbox_url: "{{ netbox_url }}"
    netbox_token: "{{ netbox_token }}"
    validate_certs: "{{ validate_certs }}"
    data:
      name: "{{ item.name }}"
      slug: "{{ item.slug }}"
      is_private: "{{ item.is_private }}"
      description: "{{ item.description | default(omit, true) }}"
      tags:
        - "source-ansible"
    state: present
  loop: "{{ rirs }}"

- name: Ensure ASNs exist.
  netbox_asn:
    netbox_url: "{{ netbox_url }}"
    netbox_token: "{{ netbox_token }}"
    validate_certs: "{{ validate_certs }}"
    data:
      asn: "{{ item.asn }}"
      rir: "{{ item.rir }}"
      description: "{{ item.description | default(omit, true) }}"
      tags:
        - "source-ansible"
    state: present
  loop: "{{ asns }}"

# ASN Ranges module missing

- name: Ensure aggregate exist.
  netbox_aggregate:
    netbox_url: "{{ netbox_url }}"
    netbox_token: "{{ netbox_token }}"
    validate_certs: "{{ validate_certs }}"
    data:
      prefix: "{{ item.prefix }}"
      rir: "{{ item.rir }}"
      description: "{{ item.description | default(omit, true) }}"
      tags:
        - "source-ansible"
    state: present
  loop: "{{ aggregates }}"

- name: Ensure route targets exist.
  netbox_route_target:
    netbox_url: "{{ netbox_url }}"
    netbox_token: "{{ netbox_token }}"
    validate_certs: "{{ validate_certs }}"
    data:
      name: "{{ item.name }}"
      description: "{{ item.description | default(omit, true) }}"
      tags:
        - "source-ansible"
    state: present
  loop: "{{ route_targes }}"

- name: Ensure VRF's exist.
  netbox_vrf:
    netbox_url: "{{ netbox_url }}"
    netbox_token: "{{ netbox_token }}"
    validate_certs: "{{ validate_certs }}"
    data:
      name: "{{ item.name }}"
      rd: "62464:{{ item.custom_id }}"
      enforce_unique: "{{ item.enforce_unique }}"
      import_targets: "{{ item.import_targets }}"
      export_targets: "{{ item.export_targets }}"
      description: "{{ item.description | default(omit, true) }}"
      custom_fields:
        custom_id: "{{ item.custom_id }}"
      tags:
        - "source-ansible"
    state: present
  loop: "{{ vrfs }}"

- name: Build generated prefixes from sites and VRF's.
  set_fact:
    generated_prefixes: |
      {%- set generated_prefixes = [] -%}
      {%- for v in vrfs -%}
        {%- set prefix = {
          "prefix": "10." ~ v.custom_id ~ ".0.0/16",
          "status": "container",
          "vrf": v.name
        } -%}
        {%- set _ = generated_prefixes.append(prefix) -%}
        {%- for s in sites -%}
          {%- set prefix = {
              "prefix": "10." ~ v.custom_id ~ "." ~ s.custom_id ~ ".0/24",
              "status": "active",
              "vrf": v.name,
              "scope_type": "dcim.site",
              "scope": s.slug,
            } -%}
          {%- set _ = generated_prefixes.append(prefix) -%}
        {%- endfor -%}
      {%- endfor -%}
      {{ generated_prefixes }}

- name: Ensure prefixes exist.
  netbox_prefix:
    netbox_url: "{{ netbox_url }}"
    netbox_token: "{{ netbox_token }}"
    validate_certs: "{{ validate_certs }}"
    data:
      prefix: "{{ item.prefix }}"
      status: "{{ item.status }}"
      vrf: "{{ item.vrf | default(omit, true) }}"
      scope_type: "{{ 'dcim.site' if (item.scope is defined and item.scope) else omit }}"
      scope: "{{ item.scope | default(omit, true )}}"
      description: "{{ item.description | default(omit, true) }}"
      tags:
        - "source-ansible"
    state: present
  loop: "{{ prefixes + generated_prefixes }}"
